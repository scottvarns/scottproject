//create a new scene
let gameScene4 = new Phaser.Scene('Game4');

//initiate scene parameters
gameScene4.init = function () {
    this.gameOver = false;
};

//load assets
gameScene4.preload = function () {
    this.load.image(`sky`, `assets/sky.png`);
    this.load.image(`ground`, `assets/platform.png`);
    this.load.image(`bomb`, `assets/bomb.png`);
    this.load.image(`star`, `assets/star.png`);
    this.load.image('factoryback', 'assets/factoryback.png');
    this.load.image('concrete', 'assets/concrete.png');
    this.load.image('metalplatform', 'assets/metalplatform.png');
    this.load.image('metaltiles', 'assets/metaltiles.png');
    this.load.image('grass', 'assets/grass3.png');
    this.load.image('background','assets/background.png');
    this.load.image('endscreen','assets/blackscreen.png');
    this.load.image('rocket','assets/mario rocket.png');
    this.load.audio('gameSound','assets/WorldmapTheme.mp3');
    this.load.audio('coinSound','assets/Coin 3.mp3');
    this.load.spritesheet('coin', 'assets/coins.png', {frameWidth: 40, frameHeight: 40});
    this.load.spritesheet('tileset', 'assets/tileset.png', { frameWidth: 32, frameHeight: 32 });
    this.load.spritesheet(`dude`, `assets/dude.png`, { frameWidth: 32, frameHeight: 48 });

};

gameScene4.create = function () {

    this.add.image(2000, 576, 'background');

    this.add.image(352 , 936, 'rocket').setScale(0.25);

    coinAudio = this.sound.add('coinSound');

    music = this.sound.add('gameSound');
    music.loop = true;
    music.play();

    this.level = [
        [07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 06, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 06, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 06, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 09, 09, 09, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 10, 10, 10, 10, 07, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 06, 07, 10, 10, 10, 10, 09, 09, 09, 09, 10, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 10, 01, 02, 02, 02, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 07, 07, 07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 10, 10, 01, 02, 02, 02, 01, 01, 09, 09, 09, 09, 09, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 02, 02, 01, 01, 01, 02, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 02, 02, 10, 10, 10, 10, 02, 02, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 09, 09, 09, 01, 01, 01, 01, 01, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 09, 09, 09, 09, 09, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 09, 09, 09, 09, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 02, 02, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 07, 06, 07, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 02, 02, 02, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 02, 02, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 01, 10, 10, 10, 10, 01, 02, 02, 02, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 10, 10, 10, 01, 01, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 07, 07, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 10, 10, 09, 09, 01, 01, 01, 01, 01, 09, 09, 09, 10, 10, 10, 10, 10, 10, 10, 08, 07,],
        [07, 10, 10, 10, 10, 10, 07, 06, 07, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 10, 09, 09, 09, 09, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 01, 01, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 10, 10, 10, 10, 02, 02, 02,],
        [07, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 02, 02, 01, 01, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 01, 01, 01,],
        [07, 10, 09, 09, 09, 09, 10, 10, 10, 10, 10, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 01, 02, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 01, 02, 02, 02, 02, 01, 01, 01, 01, 01, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 01, 02, 01,],
        [02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 10, 10, 10, 10, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 01, 01, 01,],
        [01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 01, 04, 04, 04, 04, 01, 01, 01,],
        [01, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 01, 01, 01, 01, 02, 02, 02, 02, 02, 01, 01, 01, 01, 02, 02, 02, 02, 02, 01, 01, 01, 02, 02, 02, 02, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 01, 01, 01,],
        [01, 01, 01, 01, 01, 01, 01, 02, 02, 01, 01, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 02, 02, 02, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 01, 02, 01,],
        [01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 02, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 04, 04, 04, 04, 01, 01, 01,],
    ];

    this.map = this.make.tilemap({ data: this.level, tileWidth: 32, tileHeight: 32 });
    this.tiles = this.map.addTilesetImage("tileset", "tileset", 32, 32, 1, 2);
    //this.tiles = this.map.addTilesetImage('tileset', 'tileset', 32, 32);
    this.layer = this.map.createStaticLayer(0, this.tiles, 0, 0);
    this.layer.setCollision(0);
    this.layer.setCollision(01);//dirt
    this.layer.setCollision(02);//grass
    this.layer.setCollision(03);
    //this.layer.setCollision(04);//lava
    //this.layer.setCollision(05);//water
    //this.layer.setCollision(06);//coin block
    this.layer.setCollision(07);//crate
//door is 08
    this.player = this.physics.add.sprite(32, 450, `dude`); 
    this.player.setBounce(0.2);
    //this.player.setCollideWorldBounds(true);

    this.physics.add.collider(this.player, this.layer);

    this.coinBlock = this.map.filterTiles(function(tile){
        return(tile.index === 06);
    });

    this.doorHit = this.map.filterTiles(function(tile){
        return(tile.index === 08);
    });

    this.waterHit = this.map.filterTiles(function (tile){
        return(tile.index === 05);
    });

    this.lavaHit = this.map.filterTiles(function (tile){
        return (tile.index === 04);
    });
    
    this.physics.world.overlapTiles(this.player, this.coinBlock, this.spawnCoin, null, this);

    this.physics.world.overlapTiles(this.player, this.doorHit, this.hitDoor, null, this);

    this.physics.world.overlapTiles(this.player, this.lavaHit, this.hitLava, null, this);
    
    this.physics.world.overlapTiles(this.player, this.waterHit, this.hitWater, null, this);

    this.anims.create({
        key: `left`,
        frames: this.anims.generateFrameNumbers(`dude`, { start: 0, end: 3 }),
        frameRate: 10,
        repeat: -1
    });

    this.anims.create({
        key: `turn`,
        frames: [{ key: `dude`, frame: 4 }],
        frameRate: 20
    });

    this.anims.create({
        key: `right`,
        frames: this.anims.generateFrameNumbers(`dude`, { start: 5, end: 8 }),
        frameRate: 10,
        repeat: -1
    });

    this.cameras.main.setZoom(1);  // The minimum it can be is 0.001.
    this.cameras.main.zoom = 1.25;
    this.cameras.main.setBounds(0, 0, this.map.widthInPixels, this.map.heightInPixels);
    this.cameras.main.startFollow(this.player);

    this.endText=this.add.text(3600, 576, '', { fontSize: '64px', Fill: '#000' });
    this.endText.setOrigin(0.5);

};

// this is called up to 60 times per second
gameScene4.update = function () {
    if (this.gameOver) {
        return;
    }
    cursors = this.input.keyboard.createCursorKeys();
    if (cursors.left.isDown) {
        this.player.setVelocityX(-250);
        this.player.anims.play(`left`, true);
    }
    else if (cursors.right.isDown) {
        this.player.setVelocityX(250);
        this.player.anims.play(`right`, true);
    }
    else {
        this.player.setVelocityX(0);
        this.player.anims.play(`turn`);
    }

    if (cursors.up.isDown && this.player.body.onFloor()) {
        this.player.setVelocityY(-380);
    }

    this.physics.world.overlapTiles(this.player, this.coinBlock, this.spawnCoin, null, this);

    this.physics.world.overlapTiles(this.player, this.lavaHit, this.hitLava, null, this);

    this.physics.world.overlapTiles(this.player, this.waterHit, this.hitWater, null, this);

    this.physics.world.overlapTiles(this.player, this.doorHit, this.hitDoor, null, this);
};

coinScore = 0



gameScene4.hitLava = function(player, tile){
        this.gameOver = true;
        player.disableBody(true, true);
        console.log('lava hit');
        music.stop();
        globalScore = 0;
        this.scene.start('startScreen');
};

gameScene4.hitWater = function(player, tile){
    this.gameOver = true;
    player.disableBody(true, true);
    console.log('water hit');
    globalScore = 0;
    music.stop();
    this.scene.start('startScreen');
};

gameScene4.hitDoor = function(player, tile){
    console.log("Level complete");
    //this.add.image(2000, 576, 'endscreen').setScale(4);
    music.stop();
    //this.add.text(3600, 576, 'Congratulations!',{Fontsize:'300px',Fill:'#000'});
    //this.endText.setText("Congratulations!");
}

gameScene4.spawnCoin = function(player, tile){
    console.log('level complete');
}

//still need to add a next level adn maybe rockets like in mario